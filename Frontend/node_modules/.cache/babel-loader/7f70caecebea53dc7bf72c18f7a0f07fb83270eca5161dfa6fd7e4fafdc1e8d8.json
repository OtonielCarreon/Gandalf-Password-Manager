{"ast":null,"code":"var _jsxFileName = \"/Users/samueltran/Documents/GitHub/Gandalf-Password-Manager/Frontend/src/components/PasswordManageScreen/PasswordManager.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport Sidebar from \"./Sidebar\";\nimport MainPanel from \"./MainPanel\";\nimport styles from \"./styles\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initialPasswords = [{\n  site: \"Bestbuy\",\n  username: \"Testingaccount\",\n  password: \"password123\",\n  website: \"bestbuy.com\"\n}, {\n  site: \"Amazon\",\n  username: \"Testingaccount\",\n  password: \"amazonpass\",\n  website: \"amazon.com\"\n}, {\n  site: \"Netflix\",\n  username: \"Testingaccount\",\n  password: \"netflixpass\",\n  website: \"netflix.com\"\n}];\nexport default function PasswordManager() {\n  _s();\n  const [passwords, setPasswords] = useState(initialPasswords);\n  const [selected, setSelected] = useState(passwords[0] || null);\n  const [isEditing, setIsEditing] = useState(false);\n  const [showPassword, setShowPassword] = useState(false);\n  const handleFieldChange = (field, value) => {\n    setSelected(prev => ({\n      ...prev,\n      [field]: value\n    }));\n  };\n  const handleCreateNew = () => {\n    const newEntry = {\n      site: \"\",\n      username: \"\",\n      password: \"\",\n      website: \"\"\n    };\n    setPasswords(prev => [...prev, newEntry]);\n    setSelected(newEntry);\n    setIsEditing(true);\n  };\n  const handleDelete = () => {\n    setPasswords(prev => prev.filter(entry => entry !== selected));\n    setSelected(null);\n    setIsEditing(false);\n    setShowPassword(false);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: styles.container,\n    children: [/*#__PURE__*/_jsxDEV(Sidebar, {\n      passwords: passwords,\n      selected: selected,\n      onSelect: setSelected,\n      onCreateNew: handleCreateNew\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(MainPanel, {\n      selected: selected,\n      isEditing: isEditing,\n      showPassword: showPassword,\n      onFieldChange: handleFieldChange,\n      setIsEditing: setIsEditing,\n      setShowPassword: setShowPassword,\n      onSave: () => setIsEditing(false),\n      onDelete: handleDelete\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n}\n_s(PasswordManager, \"aP8wzXHscBqsokAPRDOQQIgroeY=\");\n_c = PasswordManager;\nvar _c;\n$RefreshReg$(_c, \"PasswordManager\");","map":{"version":3,"names":["React","useState","Sidebar","MainPanel","styles","jsxDEV","_jsxDEV","initialPasswords","site","username","password","website","PasswordManager","_s","passwords","setPasswords","selected","setSelected","isEditing","setIsEditing","showPassword","setShowPassword","handleFieldChange","field","value","prev","handleCreateNew","newEntry","handleDelete","filter","entry","style","container","children","onSelect","onCreateNew","fileName","_jsxFileName","lineNumber","columnNumber","onFieldChange","onSave","onDelete","_c","$RefreshReg$"],"sources":["/Users/samueltran/Documents/GitHub/Gandalf-Password-Manager/Frontend/src/components/PasswordManageScreen/PasswordManager.jsx"],"sourcesContent":["import React, { useState } from \"react\";\nimport Sidebar from \"./Sidebar\";\nimport MainPanel from \"./MainPanel\";\nimport styles from \"./styles\";\n\nconst initialPasswords = [\n  { site: \"Bestbuy\", username: \"Testingaccount\", password: \"password123\", website: \"bestbuy.com\" },\n  { site: \"Amazon\", username: \"Testingaccount\", password: \"amazonpass\", website: \"amazon.com\" },\n  { site: \"Netflix\", username: \"Testingaccount\", password: \"netflixpass\", website: \"netflix.com\" },\n];\n\nexport default function PasswordManager() {\n  const [passwords, setPasswords] = useState(initialPasswords);\n  const [selected, setSelected] = useState(passwords[0] || null);\n  const [isEditing, setIsEditing] = useState(false);\n  const [showPassword, setShowPassword] = useState(false);\n\n  const handleFieldChange = (field, value) => {\n    setSelected((prev) => ({ ...prev, [field]: value }));\n  };\n\n  const handleCreateNew = () => {\n    const newEntry = { site: \"\", username: \"\", password: \"\", website: \"\" };\n    setPasswords((prev) => [...prev, newEntry]);\n    setSelected(newEntry);\n    setIsEditing(true);\n  };\n\n  const handleDelete = () => {\n    setPasswords((prev) => prev.filter((entry) => entry !== selected));\n    setSelected(null);\n    setIsEditing(false);\n    setShowPassword(false);\n  };\n\n  return (\n    <div style={styles.container}>\n      <Sidebar passwords={passwords} selected={selected} onSelect={setSelected} onCreateNew={handleCreateNew} />\n      <MainPanel\n        selected={selected}\n        isEditing={isEditing}\n        showPassword={showPassword}\n        onFieldChange={handleFieldChange}\n        setIsEditing={setIsEditing}\n        setShowPassword={setShowPassword}\n        onSave={() => setIsEditing(false)}\n        onDelete={handleDelete}\n      />\n    </div>\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}